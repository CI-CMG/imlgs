import{B as x,a as i,b as l,av as E,aD as $,aw as c,ej as L,ek as N,c as j,F as y,el as m,em as S,en as g}from"./index-c06df8eb.js";var w;const p=new x({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),f=new x({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let n=w=class extends E{constructor(e){super(e),this.where=null,this.geometry=null,this.spatialRelationship="intersects",this.distance=void 0,this.objectIds=null,this.units=null,this.timeExtent=null}createQuery(e={}){const{where:t,geometry:s,spatialRelationship:a,timeExtent:r,objectIds:u,units:d,distance:I}=this;return new $({geometry:c(s),objectIds:c(u),spatialRelationship:a,timeExtent:c(r),where:t,units:d,distance:I,...e})}clone(){const{where:e,geometry:t,spatialRelationship:s,timeExtent:a,objectIds:r,units:u,distance:d}=this;return new w({geometry:c(t),objectIds:c(r),spatialRelationship:s,timeExtent:c(a),where:e,units:u,distance:d})}};i([l({type:String,json:{write:!0}})],n.prototype,"where",void 0),i([l({types:L,json:{write:!0}})],n.prototype,"geometry",void 0),i([l({type:p.apiValues,json:{name:"spatialRel",read:{reader:p.read},write:{allowNull:!1,writer:p.write,overridePolicy(){return{enabled:this.geometry!=null}}}}})],n.prototype,"spatialRelationship",void 0),i([l({type:Number,json:{write:{overridePolicy(e){return{enabled:e!=null&&this.geometry!=null}}}}})],n.prototype,"distance",void 0),i([l({type:[Number],json:{write:!0}})],n.prototype,"objectIds",void 0),i([l({type:f.apiValues,json:{read:f.read,write:{writer:f.write,overridePolicy(e){return{enabled:e!=null&&this.geometry!=null}}}}})],n.prototype,"units",void 0),i([l({type:N,json:{write:!0}})],n.prototype,"timeExtent",void 0),n=w=i([j("esri.layers.support.FeatureFilter")],n);const U=n;var h;const b={read:{reader:S},write:{writer:g,overridePolicy(){return{allowNull:this.excludedEffect!=null,isRequired:this.excludedEffect==null}}}},v={read:{reader:S},write:{writer:g,overridePolicy(){return{allowNull:this.includedEffect!=null,isRequired:this.includedEffect==null}}}},R={name:"showExcludedLabels",default:!0};let o=h=class extends E{constructor(e){super(e),this.filter=null,this.includedEffect=null,this.excludedEffect=null,this.excludedLabelsVisible=!1}write(e,t){var a,r;const s=super.write(e,t);if(t!=null&&t.origin){if(s.filter){const u=Object.keys(s.filter);if(u.length>1||u[0]!=="where")return(a=t.messages)==null||a.push(new y("web-document-write:unsupported-feature-effect","Invalid feature effect 'filter'. A filter can only contain a 'where' property",{layer:t.layer,effect:this})),null}if("showExcludedLabels"in s)return(r=t.messages)==null||r.push(new y("web-document-write:unsupported-feature-effect","Invalid value for property 'excludedLabelsVisible' which should always be 'true'",{layer:t.layer,effect:this})),null}return s}clone(){return new h({filter:this.filter!=null?this.filter.clone():null,includedEffect:this.includedEffect,excludedEffect:this.excludedEffect,excludedLabelsVisible:this.excludedLabelsVisible})}};i([l({type:U,json:{write:{allowNull:!0,writer(e,t,s,a){const r=e==null?void 0:e.write({},a);r&&Object.keys(r).length!==0?m(s,r,t):m(s,null,t)}}}})],o.prototype,"filter",void 0),i([l({json:{write:!0,origins:{"web-map":b,"portal-item":b}}})],o.prototype,"includedEffect",void 0),i([l({json:{write:!0,origins:{"web-map":v,"portal-item":v}}})],o.prototype,"excludedEffect",void 0),i([l({type:Boolean,json:{write:!0,name:"showExcludedLabels",origins:{"web-map":R,"portal-item":R}}})],o.prototype,"excludedLabelsVisible",void 0),o=h=i([j("esri.layers.support.FeatureEffect")],o);const _=o;export{U as d,_ as w};
