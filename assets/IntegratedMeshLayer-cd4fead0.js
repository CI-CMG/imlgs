import{a as t,b as a,as as w,aw as O,c as u,ay as _,aU as x,I as N,g2 as I,az as L,cr as M,V as R,M as b,P as j,cY as A,cv as J,cw as K,cx as D,cy as U,cZ as V,g3 as $,w as P,aa as z,cz as E,D as c,an as G,eT as C,K as k,dN as q}from"./index-75aaf891.js";import{g as m}from"./persistable-2444cc8d.js";import{N as F,K as v}from"./SceneService-195f41a6.js";import{s as Y,l as Z,u as B,m as H}from"./I3SLayerDefinitions-8efa94c9.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-3ab4b5be.js";import"./originUtils-1469eeaf.js";import"./resourceUtils-b1af7b10.js";var h;let n=h=class extends _{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,i,o,s){if(s.layer&&s.layer.spatialReference&&!s.layer.spatialReference.equals(this.geometry.spatialReference)){if(!x(e.spatialReference,s.layer.spatialReference))return void(s&&s.messages&&s.messages.push(new N("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:s.layer.spatialReference,context:s})));const l=new w;I(e,l,s.layer.spatialReference),i[o]=l.toJSON(s)}else i[o]=e.toJSON(s);delete i[o].spatialReference}clone(){return new h({geometry:L(this.geometry),type:this.type})}};t([a({type:w}),m()],n.prototype,"geometry",void 0),t([O(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),t([a({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=h=t([u("esri.layers.support.SceneModification")],n);const d=n;var p;let y=p=class extends M(R.ofType(d)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(i=>i.toJSON(e)).filter(i=>!!i.geometry)}static fromJSON(e,i){const o=new p;for(const s of e)o.add(d.fromJSON(s,i));return o}static async fromUrl(e,i,o){const s={url:b(e),origin:"service"},l=await j(e,{responseType:"json",signal:o==null?void 0:o.signal}),T=i.toJSON(),f=[];for(const g of l.data)f.push(d.fromJSON({...g,geometry:{...g.geometry,spatialReference:T}},s));return new p({url:e,items:f})}};t([a({type:String})],y.prototype,"url",void 0),y=p=t([u("esri.layers.support.SceneModifications")],y);const S=y;let r=class extends F(A(J(K(D(U(V(k))))))){constructor(...e){super(...e),this._handles=new $,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(P(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,q))}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}readModifications(e,i,o){this._modificationsSource={url:z(e,o),context:o}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){E(o)}if(await this._fetchService(i),this._modificationsSource!=null){const o=await S.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,i){return this._debouncedSaveOperations(v.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(v.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};t([a({type:String,readOnly:!0})],r.prototype,"geometryType",void 0),t([a({type:["show","hide"]})],r.prototype,"listMode",void 0),t([a({type:["IntegratedMeshLayer"]})],r.prototype,"operationalLayerType",void 0),t([a({json:{read:!1},readOnly:!0})],r.prototype,"type",void 0),t([a({type:Y,readOnly:!0})],r.prototype,"nodePages",void 0),t([a({type:[Z],readOnly:!0})],r.prototype,"materialDefinitions",void 0),t([a({type:[B],readOnly:!0})],r.prototype,"textureSetDefinitions",void 0),t([a({type:[H],readOnly:!0})],r.prototype,"geometryDefinitions",void 0),t([a({readOnly:!0})],r.prototype,"serviceUpdateTimeStamp",void 0),t([a({type:S}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],r.prototype,"modifications",void 0),t([G(["web-scene","portal-item"],"modifications")],r.prototype,"readModifications",null),t([a(C)],r.prototype,"elevationInfo",void 0),t([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],r.prototype,"path",void 0),r=t([u("esri.layers.IntegratedMeshLayer")],r);const re=r;export{re as default};
