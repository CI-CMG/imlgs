import{a,b as o,dQ as g,c as m,dR as l,i as d,d as u,s as c,l as y}from"./index-c7ff1b65.js";import{a as f}from"./BitmapContainer-81356350.js";import{f as x,d as w}from"./LayerView-01f4fea4.js";import{o as v}from"./GraphicsView2D-b97817cc.js";import{n as _}from"./HighlightGraphicContainer-110ab871.js";import{v as H}from"./ExportStrategy-c5be6a7b.js";import{a as I}from"./RefreshableLayerView-c767aacd.js";import{U,r as V}from"./drapedUtils-2cd16f7b.js";import"./WGLContainer-d737e922.js";import"./definitions-953e0186.js";import"./VertexArrayObject-d6f94787.js";import"./Texture-8ececbac.js";import"./enums-b14466b3.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-8ccfbfb8.js";import"./enums-f1a6a48a.js";import"./ProgramTemplate-ad6b47f5.js";import"./GeometryUtils-b1438083.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./Container-a25db51f.js";import"./earcut-994046fe.js";import"./ExpandedCIM-61f541a3.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-aefa81e2.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-88412da3.js";import"./floatRGBA-3aa99d53.js";import"./normalizeUtilsSync-ba6d1166.js";import"./projectionSupport-da4d3cee.js";import"./json-48e3ea08.js";import"./AttributeStoreView-50350e43.js";import"./TiledDisplayObject-030ca40e.js";import"./visualVariablesUtils-511bc2fe.js";import"./clusterUtils-f91eea50.js";import"./util-c4503251.js";import"./Matcher-69f062c5.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-de1db8fc.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-cf6e2eb7.js";import"./ComputedAttributeStorage-1a7cde94.js";import"./arcadeTimeUtils-a95af63a.js";import"./executionError-c92d3b85.js";import"./BaseGraphicContainer-faaf058e.js";import"./FeatureContainer-f712ac24.js";import"./TileContainer-eb5140ba.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-d0b25d45.js";import"./popupUtils-fdcb9128.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([o()],e.prototype,"exportImageParameters",void 0),a([o({readOnly:!0})],e.prototype,"floors",null),a([o({readOnly:!0})],e.prototype,"exportImageVersion",null),a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o(g)],e.prototype,"timeExtent",void 0),e=a([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends P(I(x(w))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(r=>{u(r)||c.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:r}=this.layer,i=r>=10.3,n=r>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:i,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,i){return this.layer.fetchImage(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}fetchImageBitmap(t,e,r,i){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}highlight(t){return this._popupHighlightHelper.highlight(t)}};a([o()],s.prototype,"strategy",void 0),a([o()],s.prototype,"updating",void 0),s=a([m("esri.views.2d.layers.MapImageLayerView2D")],s);const Vt=s;export{Vt as default};
